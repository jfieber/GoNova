{
    "identifier": "org.ursamaris.nova.go",
    "name": "Go",
    "organization": "John Fieber",
    "description": "Go for Nova",
    "version": "1.0",
    "categories": ["languages"],
    "keywords": ["go", "golang"],
    "license": "MIT",
        
    "main": "main.js",

    "activationEvents": ["onLanguage:Go", "onWorkspaceContains:*.go"],

    "entitlements": {
        "process": true,
        "filesystem": "readwrite"
    },

    "config": [
        {
            "key": "go.gopls-enabled",
            "title": "Enable Language Server",
            "description": "Use the gopls language server for enhanced functionality. The gopls command should be installed in your search path, or you can specify the full path below.",
            "link": "https://github.com/golang/tools/blob/master/gopls/README.md",
            "type": "boolean",
            "default": true
        },
        {
            "key": "go.gopls-path",
            "title": "Language Server Command",
            "link": "https://github.com/golang/tools/blob/master/gopls/README.md",
            "description": "The command name to start the gopls language server. Use an absolute path here if gopls is not in your search path.",
            "type": "path",
            "default": "gopls",
            "filetype": ["public.unix-executable"]
        },

        {
            "key": "gopls-supported",
            "title": "Standard gopls settings",
            "type": "section",
            "link": "https://github.com/golang/tools/blob/master/gopls/doc/settings.md#officially-supported",
            "children": [
                {
                    "key": "usePlaceholders",
                    "title": "Use placeholders",
                    "description": "placeholders enables placeholders for function parameters or struct fields in completion responses.",
                    "type":"boolean",
                    "default": false
                },
                {
                    "key": "gofumpt",
                    "title": "Use gofumpt for formatting",
                    "description": "gofumpt indicates if we should run gofumpt formatting.",
                    "type": "boolean",
                    "default": false
                }
            ]
        },

        {
            "key": "gopls-experimental",
            "title": "Experimental gopls settings",
            "type": "section",
            "link": "https://github.com/golang/tools/blob/master/gopls/doc/settings.md#experimental",
            "children": [
                {
                    "key": "completionDocumentation",
                    "description": "Enable documentation with completion results",
                    "type": "boolean",
                    "default": true
                },
                {
                    "key": "completeUnimported",
                    "description": "Enable completion for packages that you do not currently imported",
                    "type": "boolean",
                    "default": true
                },
                {
                    "key": "deepCompletion",
                    "description": "Enable the ability to return completions from deep inside relevant entities, rather than just the locally accessible ones.",
                    "type": "boolean",
                    "default": true
                },
                {
                    "key": "matcher",
                    "description": "Sets the algorithm that is used when calculating completion candidates.",
                    "type": "enum",
                    "values": ["CaseInsensitive", "CaseSensitive", "Fuzzy"],
                    "default": "Fuzzy"
                },
                {
                    "key": "symbolMatcher",
                    "description": "Sets the algorithm that is used when finding workspace symbols.",
                    "type": "enum",
                    "values": ["CaseInsensitive", "CaseSensitive", "Fuzzy"],
                    "default": "Fuzzy"
                },
                {
                    "key": "symbolStyle",
                    "description": "Controls how symbols are qualified in symbol responses.",
                    "type": "enum",
                    "values": ["Dynamic", "Full", "Package"],
                    "default": "Package"
                },
                {
                    "key": "linksInHover",
                    "description": "Toggles the presence of links to documentation in hover.",
                    "type": "boolean",
                    "default": true
                },
                {
                    "key": "importShortcut",
                    "description": "Specifies whether import statements should link to documentation or go to definitions.",
                    "type": "enum",
                    "values": ["Both", "Definition", "Link"],
                    "default": "Both"
                }
            ]
        }

    ],

    "commands": {
        "extensions": [
            {
                "title": "Restart gopls",
                "command": "go.restartGopls",
                "when": "editorHasFocus",
                "filters": {
                    "syntaxes": ["go"]
                }
            },
            {
                "title": "Stop gopls",
                "command": "go.stopGopls",
                "when": "editorHasFocus",
                "filters": {
                    "syntaxes": ["go"]
                }
            },
            {
                "title": "Start gopls",
                "command": "go.startGopls",
                "when": "editorHasFocus",
                "filters": {
                    "syntaxes": ["go"]
                }
            }
        ],
        "editor": [
            {
                "title": "Organize Imports",
                "command": "go.organizeImports",
                "when": "editorHasFocus",
                "filters": {
                    "syntaxes": ["go"]
                }
            },
            {
                "title": "Format File",
                "command": "go.formatFile",
                "when": "editorHasFocus",
                "filters": {
                    "syntaxes": ["go"]
                }
            }
        ]
    }
}
